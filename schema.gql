# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: ID!
  username: String!
  email: String!
  roles: [String!]!
}

type AuthPayload {
  access_token: String!
  user: UserType!
}

type ChapterType {
  id: ID!
  title: String!
}

type ProjectType {
  id: ID
  title: String!
  description: String!
  chapters: [ChapterType!]!
}

type RawLinesType {
  line: Float
  text: String
}

type ParagraphType {
  id: ID
  chapter: ChapterType!
  index: Float!
  words: [String!]!
  annotations: [String!]!
}

type SearchResultType {
  paragraph: ParagraphType!
  paragraphIndex: Float!
  wordIndex: Float!
  label: String!
  extract: String!
}

type CommentType {
  id: ID
  content: String!
  createdAt: String!
  createdBy: UserType!
  project: ProjectType
  chapter: ChapterType
}

type EntityType {
  id: ID!
  label: String!
  color: String!
}

type AnnotationType {
  id: ID!
  chapter: ChapterType!
  label: String!
  start: CoordType!
  end: CoordType!
  entity: EntityType!
  createdBy: UserType!
  createdAt: String!
  comments: [CommentType!]!
}

type CoordType {
  paragraphIndex: Float!
  wordIndex: Float!
}

type Query {
  me: UserType!
  login(email: String!, password: String!): AuthPayload!
  projects: [ProjectType!]!
  chapterParagraphs(input: ChapterTextInput!): [RawLinesType!]!
  searchParagraphs(searchInput: SearchParagraphsInput!): [SearchResultType!]!
  projectAnnotations(projectId: String!): [AnnotationType!]!
  entities: [EntityType!]!
}

input ChapterTextInput {
  chapterId: String!
  start: Float
  end: Float
}

input SearchParagraphsInput {
  projectWide: Boolean!
  queryString: String!
  chapterId: String!
}

type Mutation {
  signup(email: String!, username: String!, password: String!): AuthPayload!
  createProject(projectInput: ProjectInput!): ProjectType!
  annotate(input: AnnotationInput!): AnnotationType!
  deleteAnnotations(deleteInput: DeleteAnnotationInput!): Boolean!
  createEntity(entityInput: EntityInput!): EntityType!
}

input ProjectInput {
  title: String!
  description: String!
}

input AnnotationInput {
  id: ID
  chapter: ID!
  label: String!
  start: CoordInput!
  end: CoordInput!
  entity: ID!
}

input CoordInput {
  paragraphIndex: Float!
  wordIndex: Float!
}

input DeleteAnnotationInput {
  annotationIds: [ID!]!
}

input EntityInput {
  label: String!
  color: String
}
